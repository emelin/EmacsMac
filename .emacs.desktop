;; -*- mode: emacs-lisp; coding: emacs-mule; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Wed Jul 31 23:34:51 2013
;; Desktop file format version 206
;; Emacs version 24.3.50.1

;; Global section:
(setq desktop-missing-file-warning nil)
(setq tags-file-name nil)
(setq tags-table-list nil)
(setq search-ring '("blue" "c-mode-hook" "func" "qemu" "valid" "clang" "gray" "config" "auto" "auto-com" "installing" "install" "long_p" "urls" "echo" "highlight"))
(setq regexp-search-ring nil)
(setq register-alist (list '(106 . "splay-time-24hr-format t)\n(setq display-time-day-and-date t)\n(display-time)\n(global-set-key [C-tab] \"\\C-q\\t\")\n(setq message-log-max nil)\n(setq ring-bell-function 'ignore)\n\n(load \"desktop\") \n(desktop-save-mode)\n;(setq mac-option-modifier 'hyper) ; sets the Option key as Hyper\n;(setq mac-option-modifier 'super) ; sets the Option key as Super\n;(setq mac-command-modifier 'meta) ; sets the Command key as Meta\n;(setq mac-control-modifier 'ctrl) ; sets the Control key as Meta\n\n(show-paren-mode)\n(require 'linum)\n\n(require 'ido)\n(ido-mode t)\n\n(require 'ibuffer)\n(global-set-key (kbd \"C-x C-b\") 'ibuffer)\n\n\n(defun toggle-fullscreen ()\n  \"Toggle full screen\"\n  (interactive)\n  (set-frame-parameter\n   nil 'fullscreen\n   (when (not (frame-parameter nil 'fullscreen)) 'fullscreen))\n  (if (frame-parameter nil 'fullscreen)\n      (display-time-mode 1))\n  (if (not (frame-parameter nil 'fullscreen))\n      (display-time-mode 0))\n  )\n\n(toggle-fullscreen)\n\n(load-file \"~/.emacs.d/anything.el\")\n;(load-file \"~/.emacs.d/anything-match-plugin.el\")\n(require 'anything-complete)\n;; Bind C-o to complete shell history\n(anything-complete-shell-history-setup-key \"\\C-o\")\n\n(global-set-key (kbd \"C-x C-f\") 'ido-find-file)\n(global-set-key (kbd \"C-x f\") 'ido-find-file)\n(global-set-key (kbd \"C-x m\") 'anything-execute-extended-command)\n;;(global-set-key (kbd \"C-x m\") 'execute-extended-command)\n(global-set-key (kbd \"C-c C-m\") 'anything-execute-extended-command)\n(global-set-key (kbd \"C-c m\")   'anything-execute-extended-command)\n\n\n\n(setq auto-mode-alist\n      (append '((\"\\\\.cpp$\" . c++-mode)\n		(\"\\\\.hpp$\" . c++-mode)\n		(\"\\\\.h$\" . c++-mode)\n		(\"\\\\.hh$\" . c++-mode)\n		(\"\\\\.lsp$\" . lisp-mode)\n		(\"\\\\.lisp$\" . lisp-mode)\n		(\"\\\\.scm$\" . scheme-mode)\n		(\"\\\\.pl$\" . perl-mode)\n		(\"\\\\.hs$\". haskell-mode)\n		(\"\\\\.vhd$\" . text-mode)\n		(\"\\\\.rb$\"  . ruby-mode)\n		(\"\\\\.rake$\" . ruby-mode)\n		(\"Gemfile\" . ruby-mode)\n		(\"\\\\.scss$\" . css-mode)\n") (desktop-list* 51 (let ((mk (make-marker))) (add-hook 'desktop-delay-hook `(lambda nil (set-marker ,mk ,nil (get-buffer ," *temp*")))) mk)) (desktop-list* 50 (let ((mk (make-marker))) (add-hook 'desktop-delay-hook `(lambda nil (set-marker ,mk ,nil (get-buffer ," *temp*")))) mk)) '(49 . "(require 'highlight-current-line)\n(highlight-current-line-minor-mode)\n\n(require 'highlight-parentheses)\n(defun turn-on-highlight-parentheses-mode ()\n(highlight-parentheses-mode t))\n(define-global-minor-mode global-highlight-parentheses-mode\n  highlight-parentheses-mode\n  turn-on-highlight-parentheses-mode)\n(global-highlight-parentheses-mode)\n(setq hl-paren-background-colors '(\"green\"))\n(global-set-key (kbd \"C-'\") 'highlight-symbol-next)\n\n(load-file \"~/.emacs.d/viewer.el\")\n") '(114 . "splay-time-24hr-format t)\n(setq display-time-day-and-date t)\n(display-time)\n(global-set-key [C-tab] \"\\C-q\\t\")\n(setq message-log-max nil)\n(setq ring-bell-function 'ignore)\n\n(load \"desktop\") \n(desktop-save-mode)\n;(setq mac-option-modifier 'hyper) ; sets the Option key as Hyper\n;(setq mac-option-modifier 'super) ; sets the Option key as Super\n;(setq mac-command-modifier 'meta) ; sets the Command key as Meta\n;(setq mac-control-modifier 'ctrl) ; sets the Control key as Meta\n\n(show-paren-mode)\n(require 'linum)\n\n(require 'ido)\n(ido-mode t)\n\n(require 'ibuffer)\n(global-set-key (kbd \"C-x C-b\") 'ibuffer)\n\n\n(defun toggle-fullscreen ()\n  \"Toggle full screen\"\n  (interactive)\n  (set-frame-parameter\n   nil 'fullscreen\n   (when (not (frame-parameter nil 'fullscreen)) 'fullscreen))\n  (if (frame-parameter nil 'fullscreen)\n      (display-time-mode 1))\n  (if (not (frame-parameter nil 'fullscreen))\n      (display-time-mode 0))\n  )\n\n(toggle-fullscreen)\n\n(load-file \"~/.emacs.d/anything.el\")\n;(load-file \"~/.emacs.d/anything-match-plugin.el\")\n(require 'anything-complete)\n;; Bind C-o to complete shell history\n(anything-complete-shell-history-setup-key \"\\C-o\")\n\n(global-set-key (kbd \"C-x C-f\") 'ido-find-file)\n(global-set-key (kbd \"C-x f\") 'ido-find-file)\n(global-set-key (kbd \"C-x m\") 'anything-execute-extended-command)\n;;(global-set-key (kbd \"C-x m\") 'execute-extended-command)\n(global-set-key (kbd \"C-c C-m\") 'anything-execute-extended-command)\n(global-set-key (kbd \"C-c m\")   'anything-execute-extended-command)\n\n\n\n(setq auto-mode-alist\n      (append '((\"\\\\.cpp$\" . c++-mode)\n		(\"\\\\.hpp$\" . c++-mode)\n		(\"\\\\.h$\" . c++-mode)\n		(\"\\\\.hh$\" . c++-mode)\n		(\"\\\\.lsp$\" . lisp-mode)\n		(\"\\\\.lisp$\" . lisp-mode)\n		(\"\\\\.scm$\" . scheme-mode)\n		(\"\\\\.pl$\" . perl-mode)\n		(\"\\\\.hs$\". haskell-mode)\n		(\"\\\\.vhd$\" . text-mode)\n		(\"\\\\.rb$\"  . ruby-mode)\n		(\"\\\\.rake$\" . ruby-mode)\n		(\"Gemfile\" . ruby-mode)\n		(\"\\\\.scss$\" . css-mode)\n		(\"Rakefile\" . ruby-mode)\n")))
(setq file-name-history '("/Users/kang/code/Panda/core/exec.c" "/Users/kang/code/Panda/core/cpu.c" "/Users/kang/code/Panda/core/kb.c" "/Users/kang/code/Panda/core/hd.c" "/Users/kang/code/Panda/core/buf.c" "/Users/kang/code/Panda/core/main.c" "/Users/kang/code/Panda/do.sh" "/Users/kang/code/Panda/usr/touch.c" "/Users/kang/code/Panda/core/pli.h" "~/code/Panda/core/blk.c" "~/code/Panda/core/blk_flymake.c" "blk_flymake.c" "/Users/kang/code/Panda/core/blk_flymake.c" "/tmp/demo.c" "/Users/kang/.emacs.d/auto-complete/auto-complete.el" "/Users/kang/.emacs.d/auto-complete-clang/auto-complete-clang.el" "/Users/kang/.emacs" "/tmp/demo.cc" "/Users/kang/.emacs_shell" "/Users/kang/Downloads/gevent-0.13.8/examples/webchat/settings.py" "/Users/kang/Downloads/gevent-0.13.8/examples/webchat/__init__.py" "/Users/kang/Downloads/gevent-0.13.8/examples/webchat/README" "/Users/kang/Downloads/gevent-0.13.8/examples/webchat/run.py" "/Users/kang/Downloads/gevent-0.13.8/examples/webchat/manage.py" "/Users/kang/Downloads/gevent-0.13.8/examples/webproxy.py" "/Users/kang/Downloads/gevent-0.13.8/examples/httpserver.py" "/Users/kang/Downloads/gevent-0.13.8/examples/dns_mass_resolve.py" "/Users/kang/Downloads/gevent-0.13.8/examples/webpy.py" "/Users/kang/Downloads/gevent-0.13.8/examples/httpserver.py" "/Users/kang/Downloads/gevent-0.13.8/examples/echoserver.py"))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 206
  "/Users/kang/.emacs"
  ".emacs"
  'emacs-lisp-mode
  '(global-auto-revert-mode hi-lock-mode highlight-symbol-mode highlight-parentheses-mode undo-tree-mode auto-complete-mode)
  10677
  '(10664 nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/Users/kang/code/Panda/core/exec.c"
  "exec.c"
  'c-mode
  '(abbrev-mode global-auto-revert-mode hi-lock-mode highlight-symbol-mode highlight-parentheses-mode undo-tree-mode auto-complete-mode hs-minor-mode view-mode)
  1043
  '(nil nil)
  t
  nil
  '((tab-width . 4) (indent-tabs-mode) (buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/Users/kang/code/Panda/core/cpu.c"
  "cpu.c"
  'c-mode
  '(abbrev-mode global-auto-revert-mode hi-lock-mode highlight-symbol-mode highlight-parentheses-mode undo-tree-mode auto-complete-mode hs-minor-mode view-mode)
  7601
  '(nil nil)
  t
  nil
  '((tab-width . 4) (indent-tabs-mode) (buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/Users/kang/code/Panda/core/hd.c"
  "hd.c"
  'c++-mode
  '(abbrev-mode global-auto-revert-mode hi-lock-mode highlight-symbol-mode highlight-parentheses-mode undo-tree-mode auto-complete-mode hs-minor-mode)
  3737
  '(nil nil)
  nil
  nil
  '((tab-width . 4) (indent-tabs-mode) (buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/Users/kang/code/Panda/core/kb.c"
  "kb.c"
  'c-mode
  '(abbrev-mode global-auto-revert-mode hi-lock-mode highlight-symbol-mode highlight-parentheses-mode undo-tree-mode auto-complete-mode hs-minor-mode view-mode)
  1074
  '(nil nil)
  t
  nil
  '((tab-width . 4) (indent-tabs-mode) (buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/Users/kang/code/Panda/core/buf.c"
  "buf.c"
  'c-mode
  '(abbrev-mode global-auto-revert-mode hi-lock-mode highlight-symbol-mode highlight-parentheses-mode undo-tree-mode auto-complete-mode hs-minor-mode view-mode)
  338
  '(nil nil)
  t
  nil
  '((tab-width . 4) (indent-tabs-mode) (buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/Users/kang/code/Panda/core/main.c"
  "main.c"
  'c-mode
  '(abbrev-mode global-auto-revert-mode hi-lock-mode highlight-symbol-mode highlight-parentheses-mode undo-tree-mode auto-complete-mode hs-minor-mode view-mode)
  1071
  '(nil nil)
  t
  nil
  '((tab-width . 4) (indent-tabs-mode) (buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/Users/kang/code/Panda/do.sh"
  "do.sh"
  'sh-mode
  '(global-auto-revert-mode hi-lock-mode highlight-parentheses-mode undo-tree-mode auto-complete-mode view-mode)
  765
  '(739 nil)
  t
  nil
  '((buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/Users/kang/.emacs_shell"
  ".emacs_shell"
  'fundamental-mode
  '(global-auto-revert-mode hi-lock-mode highlight-parentheses-mode undo-tree-mode view-mode)
  1
  '(nil nil)
  t
  nil
  '((buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/Users/kang/code/Panda/usr/touch.c"
  "touch.c"
  'c-mode
  '(abbrev-mode global-auto-revert-mode hi-lock-mode highlight-symbol-mode highlight-parentheses-mode undo-tree-mode auto-complete-mode hs-minor-mode view-mode)
  1
  '(nil nil)
  t
  nil
  '((tab-width . 4) (indent-tabs-mode) (buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/Users/kang/code/Panda/core/blk.c"
  "blk.c"
  'c-mode
  '(abbrev-mode global-auto-revert-mode hi-lock-mode highlight-symbol-mode highlight-parentheses-mode undo-tree-mode auto-complete-mode hs-minor-mode view-mode)
  164
  '(164 nil)
  t
  nil
  '((tab-width . 4) (indent-tabs-mode) (buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/tmp/demo.c"
  "demo.c"
  'c-mode
  '(abbrev-mode global-auto-revert-mode hi-lock-mode highlight-symbol-mode highlight-parentheses-mode undo-tree-mode auto-complete-mode hs-minor-mode view-mode)
  120
  '(nil nil)
  t
  nil
  '((tab-width . 4) (indent-tabs-mode) (buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/tmp/demo.cc"
  "demo.cc"
  'c++-mode
  '(abbrev-mode global-auto-revert-mode hi-lock-mode highlight-symbol-mode highlight-parentheses-mode undo-tree-mode auto-complete-mode hs-minor-mode view-mode)
  296
  '(500 nil)
  t
  nil
  '((tab-width . 4) (indent-tabs-mode) (buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/Users/kang/.emacs.d/auto-complete/auto-complete.el"
  "auto-complete.el"
  'emacs-lisp-mode
  '(global-auto-revert-mode hi-lock-mode highlight-symbol-mode highlight-parentheses-mode undo-tree-mode auto-complete-mode view-mode)
  1870
  '(nil nil)
  t
  nil
  '((buffer-file-coding-system . utf-8-unix)))

(desktop-create-buffer 206
  "/Users/kang/.emacs.d/auto-complete-clang/auto-complete-clang.el"
  "auto-complete-clang.el"
  'emacs-lisp-mode
  '(global-auto-revert-mode hi-lock-mode highlight-symbol-mode highlight-parentheses-mode undo-tree-mode auto-complete-mode view-mode)
  4227
  '(14847 nil)
  t
  nil
  '((buffer-file-coding-system . utf-8-unix)))

(desktop-create-buffer 206
  "/Users/kang/code/homebrew/Library/Homebrew/formula.rb"
  "formula.rb"
  'ruby-mode
  '(global-auto-revert-mode hi-lock-mode highlight-symbol-mode highlight-parentheses-mode undo-tree-mode auto-complete-mode auto-indent-minor-mode view-mode)
  1452
  '(nil nil)
  t
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  nil
  "Homebrew"
  'dired-mode
  '(global-auto-revert-mode hi-lock-mode highlight-parentheses-mode dired-omit-mode)
  1
  '(nil nil)
  t
  '("/Users/kang/code/homebrew/Library/Homebrew/")
  nil)

